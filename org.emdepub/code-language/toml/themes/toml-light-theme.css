/** TOML theme with Eclipse normal (light) colors **/

/** Eclipse Light.css first **/

.emphasis {
	font-style: italic;
}

.strong {
	font-weight: bold;
}

.header {
	color: rgba(0, 0, 128, 1);
}

.comment {
	color: rgba(0, 128, 0, 1);
}

.constant.language {
	color: rgba(0, 0, 255, 1);
}

.constant.numeric {
	color: rgba(9, 136, 90, 1);
}

.constant.regexp {
	color: rgba(129, 31, 63, 1);
}

.constant.rgb-value {
	color: rgba(4, 81, 165, 1);
}

.entity.name.tag {
	color: rgba(128, 0, 0, 1);
}

.entity.name.selector {
	color: rgba(128, 0, 0, 1);
}

.entity.other.attribute-name {
	color: rgba(255, 0, 0, 1);
}

.entity.other.attribute-name.css {
	color: rgba(128, 0, 0, 1);
}

.entity.other.attribute-name.scss {
	color: rgba(128, 0, 0, 1);
}

.invalid {
	color: rgba(205, 49, 49, 1);
}

.markup.underline {
	text-decoration: underline;
}

.markup.bold {
	font-weight: bold;
	color: rgba(0, 0, 128, 1);
}

.markup.heading {
	font-weight: bold;
	color: rgba(128, 0, 0, 1);
}

.markup.italic {
	font-style: italic;
}

.markup.inserted {
	color: rgba(9, 136, 90, 1);
}

.markup.deleted {
	color: rgba(163, 21, 21, 1);
}

.markup.changed {
	color: rgba(4, 81, 165, 1);
}

.markup.punctuation.quote.beginning {
	color: rgba(4, 81, 165, 1);
}

.markup.punctuation.list.beginning {
	color: rgba(4, 81, 165, 1);
}

.markup.inline.raw {
	color: rgba(128, 0, 0, 1);
}

.meta.selector {
	color: rgba(128, 0, 0, 1);
}

.meta.tag {
	color: rgba(128, 0, 0, 1);
}

.meta.preprocessor {
	color: rgba(0, 0, 255, 1);
}

.meta.preprocessor.string {
	color: rgba(163, 21, 21, 1);
}

.meta.preprocessor.numeric {
	color: rgba(9, 136, 90, 1);
}

.meta.structure.dictionary.key.python {
	color: rgba(4, 81, 165, 1);
}

.storage {
	color: rgba(0, 0, 255, 1);
}

.storage.type {
	color: rgba(0, 0, 255, 1);
}

.storage.modifier {
	color: rgba(0, 0, 255, 1);
}

.string {
	color: rgba(163, 21, 21, 1);
}

.string.xml {
	color: rgba(0, 0, 255, 1);
}

.string.jade {
	color: rgba(0, 0, 255, 1);
}

.string.yaml {
	color: rgba(0, 0, 255, 1);
}

.string.html {
	color: rgba(0, 0, 255, 1);
}

.string.regexp {
	color: rgba(129, 31, 63, 1);
}

.support.property-value {
	color: rgba(4, 81, 165, 1);
}

.support.type.property-name.css {
	color: rgba(255, 0, 0, 1);
}

.support.type.property-name.less {
	color: rgba(255, 0, 0, 1);
}

.support.type.property-name.scss {
	color: rgba(255, 0, 0, 1);
}

.support.type.property-name {
	color: rgba(4, 81, 165, 1);
}

.keyword {
	color: rgba(0, 0, 255, 1);
}

.keyword.control {
	color: rgba(0, 0, 255, 1);
}

.keyword.operator {
	color: rgba(0, 0, 0, 1);
}

.keyword.operator.new {
	color: rgba(0, 0, 255, 1);
}

.keyword.other.unit {
	color: rgba(9, 136, 90, 1);
}

.keyword.control.less {
	color: rgba(128, 0, 0, 1);
}

.metatag.php {
	color: rgba(128, 0, 0, 1);
}

.support.function.git-rebase {
	color: rgba(4, 81, 165, 1);
}

.constant.sha.git-rebase {
	color: rgba(9, 136, 90, 1);
}

.storage.modifier.import.java {
	color: rgba(0, 0, 0, 1);
}

.storage.modifier.package.java {
	color: rgba(0, 0, 0, 1);
}

.meta.type.name {
	color: rgba(38, 127, 153, 1);
}

.meta.return.type {
	color: rgba(38, 127, 153, 1);
}

.meta.return-type {
	color: rgba(38, 127, 153, 1);
}

.meta.cast {
	color: rgba(38, 127, 153, 1);
}

.meta.type.annotation {
	color: rgba(38, 127, 153, 1);
}

.support.type {
	color: rgba(38, 127, 153, 1);
}

.entity.name.class {
	color: rgba(38, 127, 153, 1);
}

.entity.name.type {
	color: rgba(38, 127, 153, 1);
}

.storage.type.cs {
	color: rgba(38, 127, 153, 1);
}

.storage.type.java {
	color: rgba(38, 127, 153, 1);
}

.entity.name.function {
	color: rgba(121, 94, 38, 1);
}

.entity.name.method {
	color: rgba(121, 94, 38, 1);
}

.keyword.control {
	color: rgba(175, 0, 219, 1);
}

.meta.parameter.type.variable {
	color: rgba(0, 16, 128, 1);
}

.variable.parameter {
	color: rgba(0, 16, 128, 1);
}

.variable {
	color: rgba(0, 16, 128, 1);
}

.variable.name {
	color: rgba(0, 16, 128, 1);
}

/** TOML specific theme from here **/

.comment.toml {
	color: rgba(63, 127, 95, 1);
}

.keyword.control.hash.comment.toml {
	font-weight: bold;
	color: rgba(63, 127, 95, 1);
}


.tag.meta.begin.array-of-tables.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.tag.meta.end.array-of-tables.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}


.tag.meta.begin.table.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.tag.meta.end.table.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}


.operator.keyword.equals.key-equals-value.toml {
	font-weight: bold;
	color: rgba(127, 127, 127, 1);
}


.selector.name.entity.dot.key.toml {
	font-weight: bold;
	color: rgba(106, 62, 62, 1);
}

.property-name.type.support.key.bare.toml {
	color: rgba(255, 0, 58, 1);
}

.property-name.type.support.key.quoted.toml {
	color: rgba(255, 58, 0, 1);
}

.property-value.support.quote.double.begin.key.toml {
	font-weight: bold;
	color: rgba(106, 62, 62, 1);
}

.property-value.support.quote.double.end.key.toml {
	font-weight: bold;
	color: rgba(106, 62, 62, 1);
}

.property-value.support.quote.single.begin.key.toml {
	font-weight: bold;
	color: rgba(106, 62, 62, 1);
}

.property-value.support.quote.single.end.key.toml {
	font-weight: bold;
	color: rgba(106, 62, 62, 1);
}


.selector.name.entity.dot.table.key.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.property-name.type.support.table.key.bare.toml {
	color: rgba(127, 0, 85, 1);
}

.property-name.type.support.table.key.quoted.toml {
	color: rgba(127, 0, 85, 1);
}

.property-value.support.quote.double.begin.table.key.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.property-value.support.quote.double.end.table.key.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.property-value.support.quote.single.begin.table.key.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.property-value.support.quote.single.end.table.key.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}


.tag.meta.begin.inline-table.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.tag.meta.end.inline-table.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.operator.keyword.equals.key-equals-value.inline-table.toml {
	font-weight: bold;
	color: rgba(127, 127, 127, 1);
}

.operator.keyword.comma.key-equals-value.inline-table.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}


.tag.meta.begin.array.toml {
	color: rgba(127, 0, 85, 1);
}

.tag.meta.end.array.toml {
	color: rgba(127, 0, 85, 1);
}

.operator.keyword.comma.array.toml {
	color: rgba(127, 0, 85, 1);
}


.string.begin.one-double-quote.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.string.end.one-double-quote.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.string.begin.one-single-quote.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.string.end.one-single-quote.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.string.begin.triple-double-quote.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.string.end.triple-double-quote.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.string.begin.triple-single-quote.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.string.end.triple-single-quote.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.string.content.one-double-quote.toml {
	color: rgba(42, 0, 255, 1);
}

.string.content.one-single-quote.toml {
	color: rgba(42, 0, 255, 1);
}

.string.content.triple-double-quote.toml {
	color: rgba(25, 25, 25, 1);
}

.string.content.triple-single-quote.toml {
	color: rgba(25, 25, 25, 1);
}


.keyword.operator.backslash.escape.sequence-one-character-compact.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.keyword.control.escape.sequence-one-character-compact.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.keyword.operator.backslash.escape.unicode.sequence-eight.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.keyword.control.escape.unicode.sequence-eight.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.keyword.operator.backslash.escape.unicode.sequence-four.toml {
	font-weight: bold;
	color: rgba(127, 0, 85, 1);
}

.keyword.control.escape.unicode.sequence-four.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.keyword.operator.backslash.line-ending.string-triple-double-quote.toml {
	font-weight: bold;
	text-decoration: underline;	
	color: rgba(127, 0, 85, 1);
}

.keyword.operator.spaces-before-backslash.line-ending.string-triple-double-quote.toml {
	text-decoration: underline;
	color: rgba(127, 0, 85, 1);
}


.numeric.constant.inf.nan.float.toml {
	font-style: italic;
	color: rgba(0, 0, 0, 1);
}


.language.constant.true.false.boolean.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}


.keyword.control.integer.hexadecimal.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.keyword.control.separator.integer.hexadecimal.toml {
	color: rgba(42, 0, 255, 1);
}

.keyword.control.integer.octal.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.keyword.control.separator.integer.octal.toml {
	color: rgba(42, 0, 255, 1);
}

.keyword.control.integer.binary.toml {
	font-weight: bold;
	color: rgba(42, 0, 255, 1);
}

.keyword.control.separator.integer.binary.toml {
	color: rgba(42, 0, 255, 1);
}

.keyword.control.decimal.integer.float.toml {
	color: rgba(42, 0, 255, 1);
}

.keyword.control.exponent.integer.float.toml {
	color: rgba(42, 0, 255, 1);
}

.keyword.control.separator.integer.float.toml {
	color: rgba(42, 0, 255, 1);
}

.numeric.constant.hexadecimal.toml {
	color: rgba(0, 0, 0, 1);
}

.numeric.constant.octal.toml {
	color: rgba(0, 0, 0, 1);
}

.numeric.constant.binary.toml {
	color: rgba(0, 0, 0, 1);
}

.numeric.constant.integer.float.toml {
	color: rgba(0, 0, 0, 1);
}


.storage.date-time-offset.toml {
	color: rgba(4, 81, 165, 1);
}

.storage.separator.date-time-offset.toml {
	font-weight: bold;
	color: rgba(4, 81, 165, 1);
}

.storage.local-date.toml {
	color: rgba(4, 81, 165, 1);
}

.storage.separator.local-date.toml {
	font-weight: bold;
	color: rgba(4, 81, 165, 1);
}

.storage.local-time.toml {
	color: rgba(4, 81, 165, 1);
}

.storage.separator.local-time.toml {
	font-weight: bold;
	color: rgba(4, 81, 165, 1);
}

.editor {
	background-color: rgba(255, 255, 255, 1);
	color: rgba(0, 0, 0, 1);
}

.editor.lineHighlight {
	background-color:  rgba(238, 238, 238, 1);
}

.editor.selection {
}