{
	"information_for_contributors": [
		"emdepub.org"
	],
	"version": "emdepub.org",
	"scopeName": "source.toml",
	"name": "TOML",
	"fileTypes": [
		"toml"
	],
	"patterns": [
		{
			"include": "#comment-line"
		},
		{
			"include": "#array-of-tables"
		},
		{
			"include": "#table"
		},		
		{
			"include": "#key-equals-value"
		}
	],
	"repository": {
		"comment-line": {
			"match": "^\\s*(?=#\\s)(.*)$",
			"captures": {
				"1": {
					"patterns": [
						{
							"include": "#comment"		
						}	
					]
				}
			}
		},
		"comment": {
			"match": "(#)\\s+(.*)$",
			"captures": {
				"1": {
					"name": "punctuation.definition.comment.toml"
				},
				"2": {
					"name": "comment.toml"
				}
			}
		},
		
		"array-of-tables": {
			"match": "^\\s*?(\\[\\[)(.*?)\\s*?(\\]\\])(?=\\s+?#|\\s*?$)\\s*?(.*$)",
			"captures": {
				"1": {
					"name": "green1"
				},
				"2": {
					"patterns": [
						{
							"include": "#key"
						}
					]
				},
				"3": {
					"name": "green2"
				},
				"4": {
					"patterns": [
						{
							"include": "#comment"
						}
					]
				}
			}
		},
		
		"table": {
			"match": "^\\s*?(\\[)(.*?)\\s*?(\\])(?=\\s+?#|\\s*?$)\\s*?(.*$)",
			"captures": {
				"1": {
					"name": "red1"
				},
				"2": {
					"patterns": [
						{
							"include": "#key"
						}
					]
				},
				"3": {
					"name": "red2"
				},
				"4": {
					"patterns": [
						{
							"include": "#comment"
						}
					]
				}
			}
		},
		
		"key-equals-value": {
			"begin": "^\\s*?(.*?)\\s*?(=)",
			"beginCaptures": {
				"1": {
					"patterns": [
						{
							"include": "#key"
						}
					]
				},
				"2": {
					"name": "punctuation.equals.toml"
				}
			},
			"end": "$",
			"patterns": [
				{
					"include": "#values"
				},
				{
					"include": "#comment"
				}	
			]
		},
		
		"key": {
			"match": "(?:(.+)(\\.\\s*?)(\")(.+)(\"\\s*?$))|(?:(.+)(\\.\\s*?)(')(.+)('\\s*?$))|(?:(.+)(\\.\\s*?)([A-Za-z0-9_-]+\\s*?$))|(?:(\")(.+)(\"\\s*?$))|(?:(')(.+)('\\s*?$))|([A-Za-z0-9_-]+\\s*?$)",
			"captures": {
				"1": {
					"patterns": [
						{
							"include": "#key"
						}	
					]
				},
				"2": {
					"name": "punctuation.equals.toml"
				},
				"3": {
					"name": "green1"
				},
				"4": {
					"name": "red2"
				},
				"5": {
					"name": "green2"
				},
				"6": {
					"patterns": [
						{
							"include": "#key"
						}	
					]
				},
				"7": {
					"name": "punctuation.equals.toml"
				},
				"8": {
					"name": "green1"
				},
				"9": {
					"name": "red2"
				},
				"10": {
					"name": "green2"
				},
				"11": {
					"patterns": [
						{
							"include": "#key"
						}	
					]
				},
				"12": {
					"name": "punctuation.equals.toml"
				},
				"13": {
					"name": "red2"
				},
				"14": {
					"name": "green1"
				},
				"15": {
					"name": "red2"
				},
				"16": {
					"name": "green2"
				},
				"17": {
					"name": "green1"
				},
				"18": {
					"name": "red2"
				},
				"19": {
					"name": "green2"
				},
				"20": {
					"name": "red2"
				}
			}
		},

		"values": {
			"patterns": [
				{
					"include": "#value-inline-table"
				},
				{
					"include": "#value-array"
				},
				{
					"include": "#value-string-triple-double-quote"
				},
				{
					"include": "#value-string-one-double-quote"
				},
				{
					"include": "#value-string-triple-single-quote"
				},
				{
					"include": "#value-string-one-single-quote"
				},
				{
					"include": "#value-float-inf-nan"
				},
				{
					"include": "#value-boolean"
				},
				{
					"include": "#value-integer-hexadecimal-with-separators"
				},
				{
					"include": "#value-integer-octal-with-separators"
				},
				{
					"include": "#value-integer-binary-with-separators"
				},
				{
					"include": "#value-date-time-offset"
				},
				{
					"include": "#value-local-date"
				},
				{
					"include": "#value-local-time"
				},
				{
					"include": "#value-integer-float-decimal-exponent-with-separators"
				}
			]
		},
		
		"value-inline-table": {
			"begin": "(\\{)(?!\\s*$)",
			"beginCaptures": {
				"1": {
					"name": "green1"
				}
			},
			"end": "(?<!^)\\s*(\\})",
			"endCaptures": {
				"1": {
					"name": "green2"
				}
			},
			"patterns": [
				{
					"include": "#inline-table-key-equals-value"
				}	
			]
		},
		"inline-table-key-equals-value": {
			"begin": "\\s*?(.*?)\\s*?(=)(?!\\s*$)",
			"beginCaptures": {
				"1": {
					"patterns": [
						{
							"include": "#key"
						}
					]
				},
				"2": {
					"name": "punctuation.equals.toml"
				}
			},			
			"end": "((?<!^)\\s*?,(?!\\s*$))|(?=\\s*?\\})",
			"endCaptures": {
				"1": {
					"name": "red1"
				}
			},
			"patterns": [
				{
					"include": "#values"
				}
			]
		},

		"value-array": {
			"begin": "(\\[)",
			"beginCaptures": {
				"1": {
					"name": "green1"
				}
			},
			"end": "(\\])",
			"endCaptures": {
				"1": {
					"name": "green2"
				}
			},
			"patterns": [
				{
					"include": "#values"
				},
				{
					"match": ",",
					"name": "red1"
				},
				{
					"include": "#comment"
				}
			]
		},

		"value-string-triple-double-quote": {
			"begin": "\"\"\"",
			"beginCaptures": {
				"0": {
					"name": "green1"
				}
			},
			"end": "\"\"\"",
			"endCaptures": {
				"0": {
					"name": "green2"
				}
			},
			"patterns": [
				{
					"include": "#value-string-escape-sequence"
				},
				{
					"include": "#value-string-triple-double-quote-line-ending-backslash"
				}
			]
		},
		"value-string-one-double-quote": {
			"match": "(\")(?!\")(.*?)((?<![^\\\\]\\\\)\")",
			"captures": {
				"1": {
					"name": "green1"
				},
				"2": {
					"name": "blue1",
					"patterns": [
						{
							"include": "#value-string-escape-sequence"
						}
					]
				},
				"3": {
					"name": "green2"
				}
			}
		},
		
		"value-string-escape-sequence": {
			"patterns": [
				{
					"include": "#value-string-escape-sequence-four-unicode"
				},
				{
					"include": "#value-string-escape-sequence-eight-unicode"
				},
				{
					"include": "#value-string-escape-sequence-one-character-compact"
				}
			]
		},
		"value-string-escape-sequence-one-character-compact": {
			"match": "(\\\\)([btnfr\\\"\\\\]{1})",
			"captures": {
				"1": {
					"name": "blue1"
				},
				"2": {
					"name": "blue2"
				}
			}
		},
		"value-string-escape-sequence-four-unicode": {
			"match": "(\\\\u)([0-9A-F][0-9A-F][0-9A-F][0-9A-F])",
			"captures": {
				"1": {
					"name": "blue1"
				},
				"2": {
					"name": "blue2"
				}
			}
		},
		"value-string-escape-sequence-eight-unicode": {
			"match": "(\\\\U)([0-9A-F][0-9A-F][0-9A-F][0-9A-F][0-9A-F][0-9A-F][0-9A-F][0-9A-F])",
			"captures": {
				"1": {
					"name": "blue1"
				},
				"2": {
					"name": "blue2"
				}
			}
		},
		"value-string-triple-double-quote-line-ending-backslash": {
			"match": "(\\s*?)([\\\\])\\s*?$",
			"captures": {
				"1": {
					"name": "red1"
				},
				"2": {
					"name": "red2"
				}
			}
		},

		"value-string-triple-single-quote": {
			"begin": "(?<!')'''",
			"beginCaptures": {
				"0": {
					"name": "green1"
				}
			},
			"end": "'''(?!')",
			"endCaptures": {
				"0": {
					"name": "green2"
				}
			}
		},

		"value-string-one-single-quote": {
			"match": "(')(?!')([^']*?)(')",
			"captures": {
				"1": {
					"name": "green1"
				},
				"2": {
					"name": "blue1"
				},
				"3": {
					"name": "red1"
				}
			}
		},

		"value-float-inf-nan": {
			"match": "[+-]{0,1}(?:inf|nan)",
			"name": "blue1"
		},

		"value-boolean": {
			"match": "(?:true|false)",
			"name": "red2"
		},		

		"value-integer-hexadecimal-with-separators": {
			"match": "(0x)((?:[0-9a-fA-F]|(?<=[0-9a-fA-F])_(?=[0-9a-fA-F])){1,})",
			"captures": {
				"1": {
					"name": "green2"
				},
				"2": {
					"patterns": [
						{
							"match": "[0-9a-fA-F]",
							"name": "blue1"
						},
						{
							"match": "_",
							"name": "red1"
						}
					]
				}
			}
		},
		"value-integer-octal-with-separators": {
			"match": "(0o)((?:[0-7]|(?<=[0-7])_(?=[0-7])){1,})",
			"captures": {
				"1": {
					"name": "green2"
				},
				"2": {
					"patterns": [
						{
							"match": "[0-7]",
							"name": "blue1"
						},
						{
							"match": "_",
							"name": "red1"
						}
					]
				}
			}
		},
		"value-integer-binary-with-separators": {
			"match": "(0b)((?:[0-1]|(?<=[0-1])_(?=[0-1])){1,})",
			"captures": {
				"1": {
					"name": "green2"
				},
				"2": {
					"patterns": [
						{
							"match": "[0-1]",
							"name": "blue1"
						},
						{
							"match": "_",
							"name": "red1"
						}
					]
				}
			}
		},

		"value-date-time-offset": {
			"match": "[0-9][0-9][0-9][0-9]-(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8]|29|30|31)[T ](?:0[0-9]|1[0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9])(?:\\.[0-9][0-9][0-9](?:[0-9]){0,1}(?:[0-9]){0,1}(?:[0-9]){0,1}){0,1}(?:Z|[+-]{1}(?:0[0-9]|1[0-4]):(?:00|30|45)){0,1}",
			"name": "blue1"
		},
		"value-local-date": {
			"match": "[0-9][0-9][0-9][0-9]-(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8]|29|30|31)",
			"name": "blue1"
		},
		"value-local-time": {
			"match": "(?:0[0-9]|1[0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9])(?:\\.[0-9][0-9][0-9](?:[0-9]){0,1}(?:[0-9]){0,1}(?:[0-9]){0,1}){0,1}",
			"name": "blue1"
		},
		
		"value-integer-float-decimal-exponent-with-separators": {
			"match": "([+-]{0,1}(([1-9]{1}(([0-9]|(?<=[0-9])_(?=[0-9])){0,37}))|[0]{1}))(\\.(((([0-9]|(?<=[0-9])_(?=[0-9])){0,37}[1-9]{1}))|[0]{1})){0,1}([eE][+-]{0,1}(?=[0-9_]*?[1-9][0-9_]*?)((([0-9]|(?<=[0-9])_(?=[0-9])){0,37}))){0,1}",
			"captures": {
				"0": {
					"patterns": [
						{
							"match": "[0-9+-]",
							"name": "blue1"
						},
						{
							"match": "\\.",
							"name": "green1"
						},
						{
							"match": "[eE]",
							"name": "green1"
						},
						{
							"match": "_",
							"name": "red1"
						}
					]
				}
			}
		}
		
	}
}